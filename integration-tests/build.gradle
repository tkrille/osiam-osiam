plugins {
    id 'java'
    id 'groovy'
    id 'com.avast.gradle.docker-compose' version '0.5.2'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.jfrog.org/artifactory/oss-snapshot-local"
    }
}

ext {
    osiamConnectorVersion = '1.9'
    springVersion = '4.3.8.RELEASE'
    spockVersion = '1.1-groovy-2.4'
    jerseyVersion = '2.26-b03'
}

dependencies {
    testCompile "org.spockframework:spock-core:${spockVersion}"
    testCompile "org.spockframework:spock-spring:${spockVersion}"
    testCompile "org.osiam:connector4java:${osiamConnectorVersion}"
    testCompile 'org.apache.httpcomponents:httpclient:4.5.3'
    testCompile 'commons-io:commons-io:2.5'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.3.0'
    testCompile "org.springframework:spring-context:${springVersion}"
    testCompile "org.springframework:spring-orm:${springVersion}"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile 'org.postgresql:postgresql:42.0.0.jre7'
    testCompile 'mysql:mysql-connector-java:5.1.39'
    testCompile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    testCompile 'org.hibernate:hibernate-entitymanager:5.2.10.Final'
    testCompile 'org.slf4j:slf4j-log4j12:1.7.25'
    testCompile 'org.dbunit:dbunit:2.5.3'
    testCompile 'joda-time:joda-time:2.9.9'
    testCompile 'com.icegreen:greenmail:1.5.4'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.10'
    testCompile "org.glassfish.jersey.core:jersey-client:${jerseyVersion}"
    testCompile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    testCompile 'org.skyscreamer:jsonassert:1.5.0'
    testCompile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1') {
        exclude group: 'org.codehaus.groovy', module: 'groovy'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
}

defaultTasks 'check'

task copyOsiamWar(type: Copy) {
    from "${rootDir}/build/libs/osiam.war"
    into "src/test/docker/osiam"
    dependsOn ':assemble'
}

composeUp.dependsOn copyOsiamWar
dockerCompose.isRequiredBy(check)

dockerCompose {
    projectName = 'osiam-integration-tests'
    forceRecreate = true
}

test {
    outputs.upToDateWhen { false }
}
